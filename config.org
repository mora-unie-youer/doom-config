#+TITLE:    Mora Unie Youer's Doom Emacs configuration
#+AUTHOR:   Mora Unie Youer
#+EMAIL:    mora_unie_youer@riseup.net
#+LANGUAGE: en
#+PROPERTY: header-args :tangle yes :results silent :cache yes :padline no

* Doom
This section is used to fully configure =init.el=.
** doom!ing
:PROPERTIES:
:header-args:emacs-lisp: :tangle no
:END:

#+name: init.el
#+begin_src emacs-lisp :tangle "init.el" :noweb yes
;;; init.el -*- lexical-binding: t; -*-

;; This file controls what Doom modules are enabled and what order they load
;; in. Remember to run 'doom sync' after modifying it!
;; NOTE This file is autogenerated from config.org

;; NOTE Press 'SPC h d h' (or 'C-h d h' for non-vim users) to access Doom's
;;      documentation. There you'll find a link to Doom's Module Index where all
;;      of our modules are listed, including what flags they support.

;; NOTE Move your cursor over a module's name (or its flags) and press 'K' (or
;;      'C-c c k' for non-vim users) to view its documentation. This works on
;;      flags as well (those symbols that start with a plus).
;;
;;      Alternatively, press 'gd' (or 'C-c c d') on a module to browse its
;;      directory (for easy access to its source code).

(doom! :input
       <<doom-input>>
       :completion
       <<doom-completion>>
       :ui
       <<doom-ui>>
       :editor
       <<doom-editor>>
       :emacs
       <<doom-emacs>>
       :term
       <<doom-term>>
       :checkers
       <<doom-checkers>>
       :tools
       <<doom-tools>>
       :os
       <<doom-os>>
       :lang
       <<doom-lang>>
       :email
       <<doom-email>>
       :app
       <<doom-app>>
       :config
       <<doom-config>>
)
#+end_src

*** Modules
**** Input
#+name: doom-input
#+begin_src emacs-lisp
; input modules
;;chinese       ; chinese input integration
;;japanese      ; japanese input integration
;;layout
#+end_src
**** Completion
#+name: doom-completion
#+begin_src emacs-lisp
; completion modules
(company        ; the ultimate code completion backend
 +childframe)   ; enable displaying completion candidates in a child frame
;;helm          ; the *other* search engine for love and life
;;ido           ; the other *other* search engine...
;;ivy           ; a search engine for love and life
(vertico        ; the search engine of the future
 +icons)        ; add icons to `file` and `buffer`
#+end_src
**** UI
#+name: doom-ui
#+begin_src emacs-lisp
; UI modules
;;deft          ; notational velocity for Emacs
doom            ; what makes DOOM look the way it does
doom-dashboard  ; a nifty splash screen for Emacs
doom-quit       ; DOOM quit-message prompts when you quit Emacs
(emoji          ; emoji support
 +ascii         ; :)
 +github        ; :smile:
 +unicode)      ; ðŸ™‚
hl-todo         ; highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW
;;hydra         ;
;;indent-guides ; highlight indentation
(ligatures      ; enable ligatures and symbols
 +extra         ; enable extra ligatures like lambda
 +fira)         ; FiraCode ligatures
minimap         ; show a map of the code on the side
modeline        ; snazzy, Atom-inspired modeline
nav-flash       ; blink cursor line after big motions
;;neotree       ; a project drawer, like NERDTree
ophints         ; highlight the region an operation acts on
(popup +all)    ; tame sudden yet inevitable temporary windows
tabs            ; a tab bar for Emacs
(treemacs       ; a project drawer, like neotree but cooler
 +lsp)          ; enable lsp integration
unicode         ; extended unicode support for various languages
vc-gutter       ; vsc diff in the fringe
vi-tilde-fringe ; fringe tildes to mark beyond EOB
(window-select  ; visually switch windows
 +numbers)      ; enable numbered windows
workspaces      ; tab emulation, persistence & separate workspaces
zen             ; distraction-free coding or writing
#+end_src
**** Editor
#+name: doom-editor
#+begin_src emacs-lisp
; editor modules
#+end_src
**** Emacs
#+name: doom-emacs
#+begin_src emacs-lisp
; emacs modules
#+end_src
**** Terminal
#+name: doom-term
#+begin_src emacs-lisp
; terminal modules
#+end_src
**** Checkers
#+name: doom-checkers
#+begin_src emacs-lisp
; checkers modules
#+end_src
**** Tools
#+name: doom-tools
#+begin_src emacs-lisp
; tools modules
#+end_src
**** OS
#+name: doom-os
#+begin_src emacs-lisp
; os modules
#+end_src
**** Languages
#+name: doom-lang
#+begin_src emacs-lisp
; lang modules
#+end_src
**** E-Mail
#+name: doom-email
#+begin_src emacs-lisp
; email modules
#+end_src
**** Applications
#+name: doom-app
#+begin_src emacs-lisp
; applications modules
#+end_src
**** Configuration
#+name: doom-config
#+begin_src emacs-lisp
; configuration modules
(default        ; configuration defaults
 +bindings      ; configuration default bindings
 +smartparens)  ; enable smartparens
literate        ; enable support for configuration in .org file
#+end_src
* Configuration
** This is me :3
Some functionality uses this to identify me, e.g. GPG configuration, email
clients, file templates and snippets. It is optional.
#+begin_src emacs-lisp
(setq user-full-name    "Mora Unie Youer"
      user-mail-address "mora_unie_youer@riseup.net")
#+end_src

** UI
*** Fonts
Really like FiraCode font, so I will use it. <3
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "FiraCode Nerd Font Mono" :size 11 :weight 'semi-light))
#+end_src

*** Line numbers
This determines the style of line numbers in effect. If set to =nil=, line
numbers are disabled. For relative line numbers, set this to =relative=.
#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src

*** Theme
This is theme I really like. :3
#+begin_src emacs-lisp
(setq doom-theme 'doom-1337)
#+end_src

** org-mode
Let's be honest. This thing is really impressive. So, I need to configure it for
my purposes. I hope that org-mode will change my life.
*** org-directory
I store my .org files in =~/.org= directory.
#+begin_src emacs-lisp
(setq org-directory "~/.org/")
#+end_src

*** org-crypt
To use this thing as I want, I need to configure epa package.
#+begin_src emacs-lisp
(after! epa
  (setq epg-pinentry-mode 'ask
        epa-file-encrypt-to "0xAD29C911170324A2"))
#+end_src

*** org-agenda
Correcting org-agenda file names (files from org-journal break colors)
#+begin_src emacs-lisp
(setq org-agenda-prefix-format '((agenda . " %i %-16:c%?-12t% s")
                                 (todo   . " %i %-16:c")
                                 (tags   . " %i %-16:c")
                                 (search . " %i %-16:c")))
#+end_src

Saving DONE time in TODOs.
#+begin_src emacs-lisp
(setq org-log-done 'time)
#+end_src

*** org-journal
Changing formats that org-journal uses.
#+begin_src emacs-lisp
(setq org-journal-date-prefix "#+TITLE: "
      org-journal-date-format "%A, %Y-%m-%d"
      org-journal-time-prefix "* "
      org-journal-time-format "%r %Z"
      org-journal-file-format "%Y-%m-%d.org")
#+end_src

Enabling journal encryption.
#+begin_src emacs-lisp
(setq org-journal-encrypt-journal t)
#+end_src

Enabling org-agenda integration.
#+begin_src emacs-lisp
(setq org-journal-enable-agenda-integration t)
#+end_src
