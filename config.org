#+TITLE:    Mora Unie Youer's Doom Emacs configuration
#+AUTHOR:   Mora Unie Youer
#+EMAIL:    mora_unie_youer@riseup.net
#+LANGUAGE: en
#+PROPERTY: header-args :tangle yes :results silent :cache yes :padline no

* Doom
This section is used to fully configure =init.el=.
** doom!ing
:PROPERTIES:
:header-args:emacs-lisp: :tangle no
:END:

#+name: init.el
#+begin_src emacs-lisp :tangle "init.el" :noweb yes
;;; init.el -*- lexical-binding: t; -*-

;; This file controls what Doom modules are enabled and what order they load
;; in. Remember to run 'doom sync' after modifying it!
;; NOTE This file is autogenerated from config.org

;; NOTE Press 'SPC h d h' (or 'C-h d h' for non-vim users) to access Doom's
;;      documentation. There you'll find a link to Doom's Module Index where all
;;      of our modules are listed, including what flags they support.

;; NOTE Move your cursor over a module's name (or its flags) and press 'K' (or
;;      'C-c c k' for non-vim users) to view its documentation. This works on
;;      flags as well (those symbols that start with a plus).
;;
;;      Alternatively, press 'gd' (or 'C-c c d') on a module to browse its
;;      directory (for easy access to its source code).

(doom! :input
       <<doom-input>>
       :completion
       <<doom-completion>>
       :ui
       <<doom-ui>>
       :editor
       <<doom-editor>>
       :emacs
       <<doom-emacs>>
       :term
       <<doom-term>>
       :checkers
       <<doom-checkers>>
       :tools
       <<doom-tools>>
       :os
       <<doom-os>>
       :lang
       <<doom-lang>>
       :email
       <<doom-email>>
       :app
       <<doom-app>>
       :config
       <<doom-config>>
)
#+end_src

*** Modules
**** Input
#+name: doom-input
#+begin_src emacs-lisp
; input modules
;;chinese               ; chinese input integration
;;japanese              ; japanese input integration
;;layout
#+end_src
**** Completion
#+name: doom-completion
#+begin_src emacs-lisp
; completion modules
(company                ; the ultimate code completion backend
 +childframe)           ; enable displaying completion candidates in child frame
;;helm                  ; the *other* search engine for love and life
;;ido                   ; the other *other* search engine...
;;ivy                   ; a search engine for love and life
(vertico                ; the search engine of the future
 +icons)                ; add icons to `file` and `buffer`
#+end_src
**** UI
#+name: doom-ui
#+begin_src emacs-lisp
; UI modules
;;deft                  ; notational velocity for Emacs
doom                    ; what makes DOOM look the way it does
doom-dashboard          ; a nifty splash screen for Emacs
doom-quit               ; DOOM quit-message prompts when you quit Emacs
(emoji                  ; emoji support
 +ascii                 ; :)
 +github                ; :smile:
 +unicode)              ; ðŸ™‚
hl-todo                 ; highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW
;;hydra                 ;
;;indent-guides         ; highlight indentation
(ligatures              ; enable ligatures and symbols
 +extra                 ; enable extra ligatures like lambda
 +fira)                 ; FiraCode ligatures
minimap                 ; show a map of the code on the side
modeline                ; snazzy, Atom-inspired modeline
nav-flash               ; blink cursor line after big motions
;;neotree               ; a project drawer, like NERDTree
ophints                 ; highlight the region an operation acts on
(popup +all)            ; tame sudden yet inevitable temporary windows
tabs                    ; a tab bar for Emacs
(treemacs               ; a project drawer, like neotree but cooler
 +lsp)                  ; enable lsp integration
unicode                 ; extended unicode support for various languages
vc-gutter               ; vsc diff in the fringe
vi-tilde-fringe         ; fringe tildes to mark beyond EOB
(window-select          ; visually switch windows
 +numbers)              ; enable numbered windows
workspaces              ; tab emulation, persistence & separate workspaces
zen                     ; distraction-free coding or writing
#+end_src
**** Editor
#+name: doom-editor
#+begin_src emacs-lisp
; editor modules
(evil                   ; come to the dark side, we have cookies
 +everywhere)           ; enable it everywhere it possible
file-templates          ; auto-snippets for empty files
fold                    ; (nigh) universal code folding
(format                 ; automated prettiness
 +onsave)               ; prettify on save
;;god                   ; run Emacs commands without modifier keys
;;lispy                 ; vim for lisp, for people who don't like vim
multiple-cursors        ; editing in many places at once
objed                   ; text object editing for the innocent
parinfer                ; turn lisp into python, sort of
rotate-text             ; cycle region at point between text candidates
snippets                ; my elves. They tipe so I don't have to
word-wrap               ; soft wrapping with language-aware indent
#+end_src
**** Emacs
#+name: doom-emacs
#+begin_src emacs-lisp
; emacs modules
(dired                  ; making dired pretty
 +icons                 ; enabling icons in dired
 +ranger)               ; making dired to be more like ranger
electric                ; smarted, keyword-based electric-indent
(ibuffer                ; interactive buffer management
 +icons)                ; enabling icons in ibuffer
(undo                   ; persistent, smarter undo for your inevitable mistakes
 +tree)                 ; using undo-tree instead of undo-fu
vc                      ; version-control and Emacs, sitting in a tree
#+end_src
**** Terminal
#+name: doom-term
#+begin_src emacs-lisp
; terminal modules
eshell                  ; the elisp shell that works everywhere
;;shell                 ; simple shell REPL for Emacs
;;term                  ; basic terminal emulator for Emacs
vterm                   ; the best terminal emulation in Emacs
#+end_src
**** Checkers
#+name: doom-checkers
#+begin_src emacs-lisp
; checkers modules
(syntax                 ; tasing you for every semicolon you forget
 +childframe)           ; displaying in a child frame
(spell                  ; tasing you for misspelling misspelling
 +aspell                ; using aspell as backend
 +everywhere            ; tasing you everywhere
 +flyspell)             ; using `flyspell` instead of `spell-fu`
grammar
#+end_src
**** Tools
#+name: doom-tools
#+begin_src emacs-lisp
; tools modules
ansible                 ;
biblio                  ; writes a PhD for you (citation needed)
debugger                ; FIXME stepping through code, to help you add bugs
direnv                  ;
(docker                 ; manipulate your Docker
 +lsp)                  ; enable lsp integration
editorconfig            ; let someone else argue about tabs vs spaces
ein                     ; tame Jupyter notebooks with Emacs
(eval +overlay)         ; run code, run (also, repls)
gist                    ; interacting with github gists
(lookup                 ; navigate your code and its documentation
 +dictionary            ; enable word definition and thesaurus lookup
 +offline               ; install and prefer offline dictionaries
 +docsets)              ; enable integration with Dash.app docsets
(lsp                    ; M-x vscode
 +peek)                 ; use `lsp-ui-peek`
(magit                  ; a git porcelain for Emacs
 +forge)                ; enable Forge
make                    ; run make tasks from Emacs
(pass                   ; password manager for nerds
 +auth)                 ; enable `auth-source-pass'
pdf                     ; pdf enhancements
prodigy                 ; FIXME managing external services & code builders
rgb                     ; creating color strings
taskrunner              ; taskrunner for all your projects
terraform               ; infrastructure as code
tmux                    ; an API for interacting with tmux
upload                  ; map local to remote projects via ssh/ftp
#+end_src
**** OS
#+name: doom-os
#+begin_src emacs-lisp
; os modules
(:if IS-MAC macos)      ; improve compatibility with macOS
tty                     ; improve the terminal Emacs experience
#+end_src
**** Languages
#+name: doom-lang
#+begin_src emacs-lisp
; lang modules
;;agda                  ; types of types of types of types
;;beancount             ; mind the GAAP
(cc                     ; C > C++ == 1
 +lsp)                  ; enable lsp integration
(clojure                ; java with a lisp
 +lsp)                  ; enable lsp integration
common-lisp             ; if you've seen one lisp, you've seen them all
;;coq                   ; proofs-as-programs
;;crystal               ; ruby at the speed of c
;;csharp                ; unity, .NEW, and mono shenanigans
;;data                  ; config/data formats
;;(dart +flutter)       ; paint ui and not much else
;;dhall                 ;
;;elixir                ; erlang done right
;;elm                   ; care for a cup of TEA?
emacs-lisp              ; drown in parentheses
;;erlang                ; an elegant language for a more civilized age
ess                     ; emacs speaks statistics
;;factor                ;
;;faust                 ; dsp, but you get to keep your soul
;;fortran               ; in FORTRAN, GOD is REAL (unless declared INTEGER)
;;fsharp                ; ML stands for Microsoft's Language
;;fstar                 ; (dependent) types and (monadic) effects and Z3
;;gdscript              ; the language you waited for
(go                     ; the hipster dialect
 +lsp)                  ; enable lsp integration
(haskell                ; a language that's lazier than I am
 +lsp)                  ; enable lsp integration
;;hy                    ; readability of scheme w/ speed of python
;;idris                 ; a language you can depend on
(java                   ; the poster child for carpal tunnel syndrome
 +lsp                   ; enable lsp integration
 +meghanada)            ; enable meghanada-mode
(javascript             ; all(hope(abandon(ye(who(enter(here))))))
 +lsp)                  ; enable lsp integration
(json                   ; at least it ain't XML
 +lsp)                  ; enable lsp integration
;;julia                 ; a better, faster MATLAB
(kotlin                 ; a better, slicker Java(Script)
 +lsp)                  ; enable lsp integration
(latex                  ; writing papers in Emacs has never been so fun
 +cdlatex               ; enable cdlatex
 +lsp)                  ; enable lsp integration
;;lean                  ; for folks with too much to prove
ledger                  ; be audit you can be
(lua                    ; one-based indices? one-based indices
 +fennel                ; enable Fennel language support
 +lsp                   ; enable lsp integration
 +moonscript)           ; enable Moonscript language support
(markdown               ; writing docs for people to ignore
 +grip)                 ; enable grip support
nim                     ; python + lisp at the speed of C
;;nix                   ; I hereby declare "nix geht mehr!"
ocaml                   ; an objective camel
(org                    ; organize your plain life in plain text
 +brain                 ; org-brain
 +journal               ; org-journal
 +noter                 ; org-noter
 +present               ; org-presentations
 +pretty                ; better displaying of org-mode
 +roam2)                ; knowledge system
(php                    ; perl's insecure younger brother
 +hack                  ; enable Hack dialect support
 +lsp)                  ; enable lsp integration
;;plantuml              ; diagrams for confusing people more
;;purescript            ; javascript, but functional
(python                 ; beautiful is better than ugly
 +cython                ; enable Cython files support
 +lsp                   ; enable lsp integration
 +pyenv)                ; enable `pyenv` support
qt                      ; the 'cutest' gui framework ever
;;racket                ; a DSL for DSLs
raku                    ; the artist formerly known as perl6
rest                    ; Emacs as a REST client
;;rst                   ; ReST in peace
(ruby                   ; 1.step {|i| p "Ruby is #{i.even? ? 'love' : 'life'}"}
 +lsp                   ; enable lsp integration
 +rails                 ; enable Ruby on Rails support
 +rvm)                  ; enable `rvm` support
(rust                   ; Fe2O3.unwrap().unwrap().unwrap().unwrap()
 +lsp)                  ; enable lsp integration
(scala                  ; java, but good
 +lsp)                  ; enable lsp integration
(scheme                 ; a fully conniving family of lisps
 +chez                  ;
 +chibi                 ;
 +chicken               ;
 +gambit                ;
 +gauche                ;
 +guile                 ;
 +kawa                  ;
 +mit                   ;
 +racket)               ;
(sh                     ; she sells {ba,z,fi}sh shells on the C xor
 +fish                  ; enable fish support
 +lsp)                  ; enable lsp integration
;;sml                   ;
solidity                ; do you need a blockchain? No.
swift                   ; who asked for emoji variables?
;;terra                 ; Earth and Moon in alignment for performance
web                     ; the tubes
(yaml                   ; JSON, but readable
 +lsp)                  ; enable lsp integration
(zig                    ; C, but simpler
 +lsp)                  ; enable lsp integration
#+end_src
**** E-Mail
#+name: doom-email
#+begin_src emacs-lisp
; email modules
;;(mu4e +gmail +org)    ; mu4e email client
(notmuch                ; notmuch email client
 +afew                  ; enable integration with `afew`
 +org)                  ; enable org-mime for writing HTML emails
;;(wanderlust +gmail)   ;
#+end_src
**** Applications
#+name: doom-app
#+begin_src emacs-lisp
; applications modules
calendar                ;
emms                    ; do you like music?
everywhere              ; *leave* Emacs!? You must be joking
irc                     ; how neckbeards socialize
(rss                    ; Emacs as an RSS reader
 +org)                  ; enable org integration
;;twitter               ; twitter client
#+end_src
**** Configuration
#+name: doom-config
#+begin_src emacs-lisp
; configuration modules
(default        ; configuration defaults
 +bindings      ; configuration default bindings
 +smartparens)  ; enable smartparens
literate        ; enable support for configuration in .org file
#+end_src
* Configuration
** This is me :3
Some functionality uses this to identify me, e.g. GPG configuration, email
clients, file templates and snippets. It is optional.
#+begin_src emacs-lisp
(setq user-full-name    "Mora Unie Youer"
      user-mail-address "mora_unie_youer@riseup.net")
#+end_src

** UI
*** Fonts
Really like FiraCode font, so I will use it. <3
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "FiraCode Nerd Font Mono" :size 11 :weight 'semi-light))
#+end_src

*** Line numbers
This determines the style of line numbers in effect. If set to =nil=, line
numbers are disabled. For relative line numbers, set this to =relative=.
#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src

*** Theme
This is theme I really like. :3
#+begin_src emacs-lisp
(setq doom-theme 'doom-1337)
#+end_src

** org-mode
Let's be honest. This thing is really impressive. So, I need to configure it for
my purposes. I hope that org-mode will change my life.
*** org-directory
I store my .org files in =~/.org= directory.
#+begin_src emacs-lisp
(setq org-directory "~/.org/")
#+end_src

*** org-crypt
To use this thing as I want, I need to configure epa package.
#+begin_src emacs-lisp
(after! epa
  (setq epg-pinentry-mode 'ask
        epa-file-encrypt-to "0xAD29C911170324A2"))
#+end_src

*** org-agenda
Correcting org-agenda file names (files from org-journal break colors)
#+begin_src emacs-lisp
(setq org-agenda-prefix-format '((agenda . " %i %-16:c%?-12t% s")
                                 (todo   . " %i %-16:c")
                                 (tags   . " %i %-16:c")
                                 (search . " %i %-16:c")))
#+end_src

Saving DONE time in TODOs.
#+begin_src emacs-lisp
(setq org-log-done 'time)
#+end_src

*** org-journal
Changing formats that org-journal uses.
#+begin_src emacs-lisp
(setq org-journal-date-prefix "#+TITLE: "
      org-journal-date-format "%A, %Y-%m-%d"
      org-journal-time-prefix "* "
      org-journal-time-format "%r %Z"
      org-journal-file-format "%Y-%m-%d.org")
#+end_src

Enabling journal encryption.
#+begin_src emacs-lisp
(setq org-journal-encrypt-journal t)
#+end_src

Enabling org-agenda integration.
#+begin_src emacs-lisp
(setq org-journal-enable-agenda-integration t)
#+end_src
